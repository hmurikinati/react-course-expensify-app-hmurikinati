{"version":3,"sources":["serviceWorker.js","components/ExpenseListItem.js","selectors/expenses.js","components/ExpenseList.js","components/ExpenseListFilters.js","actions/filters.js","components/ExpenseDashBoardPage.js","components/ExpenseForm.js","components/AddExpensePage.js","actions/expenses.js","components/EditExpensePage.js","components/HelpPage.js","components/NotFoundPage.js","components/Header.js","routers/AppRouter.js","reducers/expenses.js","reducers/filters.js","index.js","store/configureStore.js"],"names":["Boolean","window","location","hostname","match","ExpenseListItem","description","amount","createdAt","id","to","expenses","text","sortBy","startDate","endDate","filter","expense","createdAtMoment","moment","startDateMatch","isSameOrBefore","endDateMatch","isSameOrAfter","textMatch","toLowerCase","includes","sort","a","b","connect","state","filterExpenses","filters","props","length","map","key","ExpenseListFilters","calendarFocused","onDatesChange","setStartDate","setEndDate","onFocusChange","setState","onTextChange","e","setTextFilter","target","value","onSortChange","sortByDate","sortByAmount","type","this","onChange","startDateId","endDateId","focusedInput","showClearDates","numberOfMonths","isOutsideRange","React","Component","dispatch","ExpenseDashBoardPage","now","console","log","format","ExpenseForm","descriptionOnchange","noteOnChange","note","onAmountChange","onDateChange","focused","onSubmit","preventDefault","error","parseFloat","notes","valueOf","toString","placeholder","autoFocus","date","AddExpensePage","addExpense","history","push","undefined","uuid","EditExpensePage","editExpense","onRemove","removeExpense","onClick","find","params","updates","HelpPage","NotFoundPage","Header","activeClassName","exact","AppRouter","path","component","expensesReducerDefaultState","action","filtersReducersDefaultState","startOf","endOf","store","createStore","combineReducers","expensesReducers","filtersReducer","__REDUX_DEVTOOLS_EXTENSION__","jsx","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.56d3bc31.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst ExpenseListItem = ({ description, amount, createdAt, id }) => (\r\n    <div>\r\n    <Link to={`/edit/${id}`}>\r\n        <h3>{description}</h3>\r\n        </Link>\r\n        <p>{amount} - {createdAt} </p>\r\n       \r\n    </div>\r\n);\r\n\r\n\r\nexport default ExpenseListItem;","import moment from 'moment';\r\n\r\nexport default (expenses, { text, sortBy, startDate, endDate }) => {\r\n    return expenses.filter((expense) => {\r\nconst createdAtMoment = moment(expense.createdAt)\r\n\r\n        const startDateMatch = startDate ? startDate.isSameOrBefore(createdAtMoment, 'day') : true;\r\n        const endDateMatch = endDate ? endDate.isSameOrAfter(createdAtMoment, 'day') : true;\r\n        const textMatch = expense.description.toLowerCase().includes(text.toLowerCase()) ;\r\n        return startDateMatch && endDateMatch && textMatch;\r\n\r\n    }).sort((a, b) => {\r\n        if (sortBy === 'date') {\r\n            return a.createdAt < b.createdAt ? 1 : -1\r\n        } else if (sortBy === 'amount') {\r\n            return a.amount < b.amount ? 1 : -1\r\n        }\r\n    })\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ExpenseListItem from './ExpenseListItem';\r\nimport filterExpenses from '../selectors/expenses'\r\n\r\nexport const ExpenseList = (props) => (\r\n    <div>\r\n        <h1>Expense List</h1>\r\n        {\r\n            props.expenses.length === 0 ? (\r\n                <p>No Expense found..</p>\r\n            ) : (\r\n                    props.expenses.map((expense) => (\r\n                        <ExpenseListItem key={expense.id} {...expense} />\r\n                    )))\r\n        }\r\n\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        expenses: filterExpenses(state.expenses, state.filters)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ExpenseList)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport 'react-dates/initialize';\r\nimport { DateRangePicker } from 'react-dates';\r\nimport { setTextFilter, sortByAmount, sortByDate, setStartDate, setEndDate } from '../actions/filters';\r\n\r\n\r\nexport class ExpenseListFilters extends React.Component {\r\n\r\n    state = {\r\n        calendarFocused: null,\r\n    }\r\n\r\n    onDatesChange = ({ startDate, endDate }) => {\r\n        this.props.setStartDate(startDate);\r\n        this.props.setEndDate(endDate);\r\n    }\r\n    onFocusChange = (calendarFocused) => {\r\n        this.setState(() => ({ calendarFocused }))\r\n    }\r\n\r\n    onTextChange = (e) => {\r\n        this.props.setTextFilter({ text: e.target.value })\r\n    }\r\n    onSortChange = (e) => {\r\n        e.target.value === 'date' ? this.props.sortByDate() : this.props.sortByAmount()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"text\" value={this.props.filters.text} onChange={this.onTextChange}></input>\r\n                <select value={this.props.filters.sortBy} onChange={this.onSortChange}>\r\n                    <option value='date'>Date</option>\r\n                    <option value='amount'>Amount</option>\r\n                </select>\r\n                <DateRangePicker\r\n                    startDate={this.props.filters.startDate}\r\n                    startDateId=\"your_unique_start_date_id\"\r\n                    endDateId=\"your_unique_end_date_id\"\r\n                    endDate={this.props.filters.endDate}\r\n                    onDatesChange={this.onDatesChange}\r\n                    focusedInput={this.state.calendarFocused}\r\n                    onFocusChange={this.onFocusChange}\r\n                    showClearDates={true}\r\n                    numberOfMonths={1}\r\n                    isOutsideRange={() => false}\r\n                />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    filters: state.filters\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setTextFilter: ({ text }) => dispatch(setTextFilter({ text })),\r\n    sortByDate: () => dispatch(sortByDate()),\r\n    sortByAmount: () => dispatch(sortByAmount()),\r\n    setStartDate: (startDate) => dispatch(setStartDate(startDate)),\r\n    setEndDate: (endDate) => dispatch(setEndDate(endDate))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseListFilters)","export const setTextFilter = ({ text = '' } = {}) => ({\r\n    type: 'CHANGE_TEXT_FILTER',\r\n    text,\r\n});\r\n\r\nexport const sortByAmount = () => ({\r\n    type: 'SORT_By_AMOUNT'\r\n});\r\n\r\nexport const sortByDate = () => ({\r\n    type: 'SORT_By_DATE'\r\n});\r\n\r\nexport const setStartDate = (startDate) => ({\r\n    type: 'CHANGE_START_DATE',\r\n    startDate\r\n});\r\n\r\nexport const setEndDate = (endDate) => ({\r\n    type: 'CHANGE_END_DATE',\r\n    endDate\r\n});","import React from 'react';\r\nimport ExpenseList from './ExpenseList';\r\nimport ExpenseListFilter from './ExpenseListFilters';\r\nconst ExpenseDashBoardPage = () => (\r\n    <div>\r\n        <ExpenseListFilter />\r\n        <ExpenseList />\r\n    </div>\r\n);\r\n\r\nexport default ExpenseDashBoardPage;","import React from 'react';\r\nimport moment from 'moment';\r\nimport 'react-dates/initialize';\r\nimport { SingleDatePicker } from 'react-dates';\r\n\r\nconst now = moment();\r\nconsole.log(now.format('MMM Do, YYYY'))\r\n\r\nexport default class ExpenseForm extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.state = {\r\n            description: props.expense ? props.expense.description : '',\r\n            note: props.expense ? props.expense.note : '',\r\n            amount: props.expense ? (props.expense.amount / 100).toString() : '',\r\n            createdAt: props.expense ? moment(props.expense.createdAt) : moment(),\r\n            calendarFocused: false,\r\n            error: ''\r\n        }\r\n\r\n    }\r\n\r\n\r\n    descriptionOnchange = (e) => {\r\n        const description = e.target.value;\r\n        this.setState(() => ({ description }));\r\n\r\n    }\r\n\r\n    noteOnChange = (e) => {\r\n        const note = e.target.value;\r\n        this.setState(() => ({ note }));\r\n    }\r\n    onAmountChange = (e) => {\r\n        const amount = e.target.value;\r\n\r\n        if (!amount || amount.match(/^\\d{1,}(\\.\\d{0,2})?$/)) {\r\n            this.setState(() => ({ amount }));\r\n        }\r\n    }\r\n    onDateChange = (createdAt) => {\r\n        console.log('Date change is being called');\r\n        if (createdAt) {\r\n            this.setState(() => ({ createdAt }));\r\n        }\r\n    }\r\n    onFocusChange = ({ focused }) => {\r\n        this.setState(() => ({ calendarFocused: focused }))\r\n\r\n    }\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n       \r\n        if (!this.state.description || !this.state.amount) {\r\n            this.setState(() => ({ error: 'Please enter Description and AMount' }));\r\n        } else {\r\n            this.setState(() => ({ error: '' }));\r\n            this.props.onSubmit({\r\n                description: this.state.description,\r\n                amount: parseFloat(this.state.amount, 10) * 100,\r\n                notes: this.state.notes,\r\n                createdAt: this.state.createdAt.valueOf()\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.error && <p> {this.state.error} </p>}\r\n                <form onSubmit={this.onSubmit}>\r\n                    <input\r\n                        type='text'\r\n                        placeholder=\"Description\"\r\n                        autoFocus\r\n                        value={this.state.description}\r\n                        onChange={this.descriptionOnchange}\r\n                    />\r\n\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Amount'\r\n                        value={this.state.amount}\r\n                        onChange={this.onAmountChange}\r\n                    />\r\n                    <SingleDatePicker\r\n                        date={this.state.createdAt}\r\n                        onDateChange={this.onDateChange}\r\n                        focused={this.state.calendarFocused}\r\n                        onFocusChange={this.onFocusChange}\r\n                        numberOfMonths={1}\r\n                        isOutsideRange={() => false}\r\n                    />\r\n                    <textarea\r\n                        placeholder='Add a note for your expense (optional)'\r\n                        value={this.state.note}\r\n                        onChange={this.noteOnChange}\r\n                    />\r\n                    <button>Save Expense</button>\r\n                    \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport { addExpense } from '../actions/expenses';\r\n\r\n\r\nexport class AddExpensePage extends React.Component {\r\n    onSubmit = (expense) => {\r\n        this.props.addExpense(expense)\r\n        this.props.history.push('/')\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1> Add Expense</h1>\r\n                <ExpenseForm\r\n                    onSubmit={this.onSubmit}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    addExpense: (expense) => dispatch(addExpense(expense))\r\n});\r\n\r\nexport default connect(undefined, mapDispatchToProps)(AddExpensePage);","import uuid from 'react-uuid';\r\n\r\nexport const addExpense = ({ description = '', note = '', amount = 0, createdAt = 0 } = {}) => ({\r\n    type: 'ADD_EXPENSE',\r\n    expense: {\r\n        id: uuid(),\r\n        description,\r\n        note,\r\n        amount,\r\n        createdAt\r\n    }\r\n});\r\n\r\nexport const removeExpense = ({ id = 'aaa' } = {}) => ({\r\n    type: 'REMOVE_EXPENSE',\r\n    id\r\n});\r\n\r\nexport const editExpense = ({ id }, updates) => ({\r\n    type: \"EDIT_EXPENSE\",\r\n    id,\r\n    updates\r\n});","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ExpenseForm from './ExpenseForm'\r\nimport { editExpense, removeExpense } from '../actions/expenses'\r\n\r\nexport class EditExpensePage extends React.Component {\r\n\r\n    onSubmit = (expense) => {\r\n        this.props.editExpense({ id: this.props.expense.id }, expense)\r\n        this.props.history.push('/');\r\n    };\r\n    onRemove = () => {\r\n        this.props.removeExpense({ id: this.props.expense.id });\r\n        this.props.history.push('/');\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ExpenseForm\r\n                    expense={this.props.expense}\r\n                    onSubmit={this.onSubmit}\r\n                />\r\n                <button onClick={this.onRemove}>Remove</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, props) => ( {\r\n    expense: state.expenses.find((expense) => expense.id === props.match.params.id)\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, props) => ({\r\n    editExpense: ({ id }, expense) => dispatch(editExpense({ id }, expense)),\r\n    removeExpense: ({ id }) => dispatch(removeExpense({ id }))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditExpensePage);","import React from 'react';\r\n\r\nconst HelpPage = () => (\r\n    <div>\r\n        This is from my help component\r\n    </div>\r\n);\r\n\r\n\r\nexport default HelpPage;","import React from 'react';\r\nimport {Link } from 'react-router-dom';\r\n\r\n\r\nconst NotFoundPage = () => (\r\n    <div>\r\n        No Match Found <Link to='/'>Go Home</Link>\r\n    </div>\r\n);\r\n\r\nexport default NotFoundPage;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nconst Header = () => (\r\n    <header>\r\n        <header>\r\n            <h1>Expensify</h1>\r\n        </header>\r\n        <NavLink to='/' activeClassName='is-active' exact={true}>Dashboard</NavLink>\r\n        <NavLink to='/create' activeClassName='is-active'>Create Expense</NavLink>\r\n        <NavLink to='/help' activeClassName='is-active'>Help</NavLink>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Route, BrowserRouter, Switch} from 'react-router-dom';\r\n\r\nimport ExpenseDashBoardPage from '../components/ExpenseDashBoardPage';\r\nimport AddExpensePage from '../components/AddExpensePage';\r\nimport EditExpensePage from '../components/EditExpensePage';\r\nimport HelpPage from '../components/HelpPage';\r\nimport NotFoundPage from '../components/NotFoundPage'\r\nimport Header from '../components/Header';\r\n\r\n\r\nconst AppRouter = () => (\r\n    <BrowserRouter>\r\n        <div>\r\n            <Header />\r\n            <Switch>\r\n                <Route path='/' component={ExpenseDashBoardPage} exact={true} />\r\n                <Route path='/create' component={AddExpensePage} />\r\n                <Route path='/edit/:id' component={EditExpensePage} />\r\n                <Route path='/help' component={HelpPage} />\r\n                <Route component={NotFoundPage} />\r\n            </Switch>\r\n        </div>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default AppRouter;","const expensesReducerDefaultState = [];\r\n\r\nexport default (state = expensesReducerDefaultState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_EXPENSE':\r\n            return [...state, action.expense];\r\n        case 'REMOVE_EXPENSE':\r\n            return state.filter(({ id }) => id !== action.id);\r\n        case 'EDIT_EXPENSE':\r\n           \r\n            return state.map((expense) => {\r\n                if (expense.id === action.id) {\r\n                    return {\r\n                        ...expense,\r\n                        ...action.updates\r\n                    }\r\n                } else {\r\n                    return expense;\r\n                }\r\n            })\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import moment from 'moment';\r\n\r\nconst filtersReducersDefaultState = {\r\n    text: '',\r\n    sortBy: 'date',\r\n    startDate: moment().startOf('month'),\r\n    endDate: moment().endOf('month')\r\n};\r\nexport default (state = filtersReducersDefaultState, action) => {\r\n    switch (action.type) {\r\n        case 'CHANGE_TEXT_FILTER':\r\n            return { ...state, text: action.text }\r\n        case 'SORT_By_AMOUNT':\r\n            return { ...state, sortBy: 'amount' }\r\n        case 'SORT_By_DATE':\r\n            return { ...state, sortBy: 'date' }\r\n        case 'CHANGE_START_DATE':\r\n            return { ...state, startDate: action.startDate };\r\n        case 'CHANGE_END_DATE':\r\n            return { ...state, endDate: action.endDate }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\n import AppRouter from './routers/AppRouter'\n import configureStore from './store/configureStore';\n import { addExpense } from './actions/expenses'; \n//import { setTextFilter } from './actions/filters';\nimport getVisibleExpenses from './selectors/expenses'\nimport 'normalize.css/normalize.css';\nimport './styles/styles.scss';\n//import NyComponent from '../src/components/mycomponent'\n\nconst store = configureStore();\n\nconst jsx = (\n  <Provider store={store}>\n      <AppRouter />\n  </Provider>\n);\n\nReactDOM.render(\n  \n    jsx,\n  document.getElementById('app')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, combineReducers } from 'redux';\r\nimport expensesReducers from '../reducers/expenses';\r\nimport filtersReducer from '../reducers/filters';\r\n\r\nexport default () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            expenses: expensesReducers,\r\n            filters: filtersReducer,\r\n        }),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    );\r\n    return store;\r\n};\r\n"],"sourceRoot":""}